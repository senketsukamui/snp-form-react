{"version":3,"sources":["components/Main/index.module.css","components/Document/index.module.css","components/Form/index.module.css","components/Document/index.jsx","utils/constants.js","utils/mock.js","utils/validators.js","components/Input/index.jsx","store/actions/index.js","store/actions/form.js","components/Form/index.jsx","components/Main/index.jsx","store/reducers/form.js","store/reducers/index.js","store/store.js","components/Application/index.jsx","serviceWorker.js","index.js","components/Input/index.module.css"],"names":["module","exports","React","memo","formFields","useSelector","state","form","documentNames","useMemo","reduce","acc","value","name","birthDate","education","workPlace","experience","email","aboutYou","className","styles","document","title_block","title","profile_image","form_field","about_field","document_footer","sign","snp_logo","INPUT_TYPES","VALIDATION_ERRORS","dateRegex","emailRegex","INPUT_INFO","placeholder","SELECT_OPTIONS","validators","validate","length","match","getError","Input","props","type","input","required","field","error","renderedOptions","map","e","index","key","select","textarea","CHANGE_FORM_FIELD","ActionTypes","SET_FORM_FIELDS","Form","dispatch","useDispatch","fields","getLocalStorageState","useCallback","localStorageState","JSON","parse","localStorage","getItem","payload","newState","useState","inputState","changeInputState","handleInputChange","stateCopy","target","dataset","setItem","stringify","renderedInputs","onChange","data-field","id","select_label","input_label","htmlFor","noValidate","description","form_fields","main","initialState","formReducer","createReducer","action","idx","findIndex","combineReducers","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","App","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,KAAO,qB,sDCAzBD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,YAAc,8BAA8B,WAAa,6BAA6B,YAAc,8BAA8B,cAAgB,gCAAgC,gBAAkB,kCAAkC,SAAW,2BAA2B,KAAO,yB,4DCA3WD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,YAAc,0BAA0B,YAAc,0BAA0B,aAAe,2BAA2B,YAAc,0BAA0B,SAAW,uBAAuB,WAAa,2B,mIC6C1QC,MAAMC,MA1CJ,WACf,IAAMC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAE1CC,EAAgBN,IAAMO,SAC1B,kBACEL,EAAWM,QAAO,SAACC,EAAKC,GAEtB,OADAD,EAAIC,EAAMC,MAAQD,EAAMA,MACjBD,IACN,MACL,CAACP,IAIDS,EAOEL,EAPFK,KACAC,EAMEN,EANFM,UACAC,EAKEP,EALFO,UACAC,EAIER,EAJFQ,UACAC,EAGET,EAHFS,WACAC,EAEEV,EAFFU,MACAC,EACEX,EADFW,SAEF,OACE,yBAAKC,UAAWC,IAAOC,UACrB,yBAAKF,UAAWC,IAAOE,aACrB,wBAAIH,UAAWC,IAAOG,OAAtB,yGAEF,yBAAKJ,UAAWC,IAAOI,gBACvB,yBAAKL,UAAWC,IAAOK,YAAvB,uBAAyCb,GACzC,yBAAKO,UAAWC,IAAOK,YAAvB,8EAAmDZ,EAAnD,KACA,yBAAKM,UAAWC,IAAOK,YAAvB,uEAAiDX,EAAjD,KACA,yBAAKK,UAAWC,IAAOK,YAAvB,2FAAsDV,EAAtD,KACA,yBAAKI,UAAWC,IAAOK,YAAvB,iGAAuDT,GACvD,yBAAKG,UAAWC,IAAOK,YAAvB,sDAA+CR,GAC/C,yBAAKE,UAAWC,IAAOM,aAAvB,0CAA8CR,GAC9C,yBAAKC,UAAWC,IAAOO,iBACrB,uBAAGR,UAAWC,IAAOQ,MAArB,gDACA,yBAAKT,UAAWC,IAAOS,gB,wCCxClBC,EACL,OADKA,EAGD,WAHCA,EAMH,SAGGC,EACC,2RADDA,EAEE,kTAFFA,EAGK,mQAHLA,EAIM,kQAJNA,EAKO,kQALPA,EAMC,kNANDA,EAOM,kQAGNC,EAAY,oPAEZC,EAAa,0JCrBbC,EAAa,CACxBtB,KAAM,CAAEA,KAAM,qBAAOuB,YAAa,0FAClCtB,UAAW,CACTD,KAAM,4EACNuB,YAAa,8MAEfrB,UAAW,CAAEF,KAAM,qEAAeuB,YAAa,0IAC/CpB,UAAW,CAAEH,KAAM,sEAAgBuB,YAAa,2IAChDnB,WAAY,CACVJ,KAAM,+FACNuB,YAAa,8JAEfjB,SAAU,CAAEN,KAAM,kCAAUuB,YAAa,gGACzClB,MAAO,CACLL,KAAM,iCACNuB,YAAa,uGAIJC,EAAiB,CAC5B,qBACA,0CACA,mDACA,mDACA,6DCtBWC,EAAa,CACxBpB,MAAO,CACLqB,SAAU,SAAC3B,GACT,OAAQA,EAAM4B,QAAU5B,EAAM6B,MAAMP,IAEtCQ,SAAU,WACR,OAAOV,IAGXlB,UAAW,CACTyB,SAAU,SAAC3B,GACT,OAAQA,EAAM4B,QAAU5B,EAAM6B,MAAMR,IAEtCS,SAAU,WACR,OAAOV,IAGXb,SAAU,CACRoB,SAAU,SAAC3B,GACT,OAAQA,EAAM4B,QAAW5B,EAAM4B,OAAS,GAAK5B,EAAM4B,OAAS,KAE9DE,SAAU,WACR,OAAOV,IAGXhB,UAAW,CACTuB,SAAU,SAAC3B,GACT,OAAQA,EAAM4B,QAAU5B,EAAM4B,OAAS,IAEzCE,SAAU,WACR,OAAOV,IAGXf,WAAY,CACVsB,SAAU,SAAC3B,GACT,OAAQA,EAAM4B,QAAU5B,EAAM4B,OAAS,IAEzCE,SAAU,WACR,OAAOV,IAGXnB,KAAM,CACJ0B,SAAU,SAAC3B,GACT,OAAQA,EAAM4B,QAAU5B,EAAM4B,OAAS,IAEzCE,SAAU,WACR,OAAOV,IAGXjB,UAAW,CACTwB,SAAU,SAAC3B,GACT,OAAQA,EAAM4B,QAAU5B,EAAM4B,OAAS,IAEzCE,SAAU,WACR,OAAOV,KCTEW,EAzCD,SAACC,GACb,GAAIA,EAAMC,OAASd,EACjB,OACE,oCACE,2CAAWa,EAAX,CAAkBxB,UAAWC,IAAOyB,MAAOC,UAAQ,KAClDT,EAAWM,EAAMI,OAAOT,SAASK,EAAMhC,OACtC,GAEA,yBAAKQ,UAAWC,IAAO4B,OACpBX,EAAWM,EAAMI,OAAON,aAK5B,GAAIE,EAAMC,OAASd,EAAoB,CAC5C,IAAMmB,EAAkBb,EAAec,KAAI,SAACC,EAAGC,GAAJ,OACzC,4BAAQC,IAAKD,GAAQD,MAEvB,OACE,oCACE,4CAAYR,EAAZ,CAAmBxB,UAAWC,IAAOkC,OAAQR,UAAQ,IAClDG,IAIF,OAAIN,EAAMC,OAASd,EAEtB,oCACE,8CAAca,EAAd,CAAqBxB,UAAWC,IAAOmC,SAAUT,UAAQ,KACxDT,EAAWM,EAAMI,OAAOT,SAASK,EAAMhC,OACtC,GAEA,yBAAKQ,UAAWC,IAAO4B,OACpBX,EAAWM,EAAMI,OAAON,kBAR5B,GC/BM,EACM,oBADN,EAEI,kBCAXe,EAAuCC,EAApBC,EAAoBD,ECuFhCE,EAjFF,WACX,IAAMC,EAAWC,cAEXC,EAAS1D,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAEtCyD,EAAuB9D,IAAM+D,aAAY,WAC7C,IAAMC,EAAoBC,KAAKC,MAAMC,aAAaC,QAAQ,eAE1D,OADAT,EDNK,CAAEhB,KAAMc,EAAiBY,QCMP,CAAEC,SAAUN,KAC5BA,IACN,CAACL,IATa,EAWsB3D,IAAMuE,SAC3CT,KAA0B,CACxBnD,KAAM,GACNC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,WAAY,GACZC,MAAO,GACPC,SAAU,KAnBG,mBAWVuD,EAXU,KAWEC,EAXF,KAuBXC,EAAoB1E,IAAM+D,aAC9B,SAACb,GACC,ID7B0BmB,EC6BpBM,EAAYH,EAClBG,EAAUzB,EAAE0B,OAAOC,QAAQ/B,OAASI,EAAE0B,OAAOlE,MAC7C+D,EAAiBE,GACjBhB,GDhC0BU,ECiCR,CACd3D,MAAOiE,EAAUzB,EAAE0B,OAAOC,QAAQ/B,OAClCA,MAAOI,EAAE0B,OAAOC,QAAQ/B,ODlCzB,CAAEH,KAAMY,EAAmBc,aCqC9BF,aAAaW,QAAQ,aAAcb,KAAKc,UAAUJ,MAEpD,CAAChB,EAAUa,IAGPQ,EAAiBhF,IAAMO,SAC3B,kBACEsD,EAAOZ,KAAI,SAACC,EAAGC,GAAJ,OACT,yBAAKjC,UAAWC,IAAOK,WAAY4B,IAAKD,GACtC,kBAAC,EAAD,CACER,KAAMO,EAAEP,KACRzB,UAAWC,IAAOyB,MAClBqC,SAAUP,EACVhE,MAAOwC,EAAExC,MACToC,MAAOI,EAAEvC,KACTuE,aAAYhC,EAAEvC,KACdwE,GAAIhC,EACJC,IAAKD,IAEP,2BACEjC,UACEgC,EAAEP,OAASd,EACPV,IAAOiE,aACPjE,IAAOkE,YAEbC,QAASnC,GAERlB,EAAWiB,EAAEvC,MAAMA,KARtB,WAYN,CAACkD,IAGH,OACE,0BAAM3C,UAAWC,IAAOd,KAAMkF,YAAU,GACtC,yBAAKrE,UAAWC,IAAOG,OAAvB,kHACA,uBAAGJ,UAAWC,IAAOqE,aAArB,8iBAIA,yBAAKtE,UAAWC,IAAOsE,aAAcT,GACrC,yBAAK9D,UAAWC,IAAO0B,UAAvB,8HCtES7C,MAAMC,MATR,WACX,OACE,yBAAKiB,UAAWC,IAAOuE,MACrB,kBAAC,EAAD,MACA,kBAAC,EAAD,U,+BCLEnC,EAAuCC,EAApBC,EAAoBD,EAEzCmC,EAAe,CACnB,CACEjF,MAAO,GACPiC,KAAMd,EACNlB,KAAM,QAER,CAAED,MAAO,GAAIC,KAAM,YAAagC,KAAMd,GACtC,CAAEnB,MAAO,GAAIC,KAAM,YAAagC,KAAMd,GACtC,CAAEnB,MAAO,GAAIC,KAAM,YAAagC,KAAMd,GACtC,CAAEnB,MAAO,GAAIC,KAAM,aAAcgC,KAAMd,GACvC,CAAEnB,MAAO,GAAIC,KAAM,QAASgC,KAAMd,GAClC,CAAEnB,MAAO,GAAIC,KAAM,WAAYgC,KAAMd,IAG1B+D,EAAcC,YAAcF,GAAD,mBACrCpC,GAAoB,SAACnD,EAAO0F,GAAY,IAC/BzB,EAAYyB,EAAZzB,QACF0B,EAAM3F,EAAM4F,WAAU,SAAC9C,GAAD,OAAOA,EAAEvC,OAAS0D,EAAQvB,SACtD1C,EAAM2F,GAAKrF,MAAQ2D,EAAQ3D,SAJS,cAOrC+C,GAAkB,SAACrD,EAAO0F,GAAY,IAC7BzB,EAAYyB,EAAZzB,QACHA,EAAQC,WAEblE,EADe,YAAOA,GACJ6C,KAAI,SAACC,GACrBA,EAAExC,MAAQ2D,EAAQC,SAASpB,EAAEvC,aAZK,ICjBzBsF,cAAgB,CAC7B5F,KAAMuF,ICIOM,EALDC,YACZC,EACAC,OAAOC,8BAAgCD,OAAOC,gCCQjCC,EARH,WACV,OACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,QCIcM,QACW,cAA7BH,OAAOI,SAASC,UAEe,UAA7BL,OAAOI,SAASC,UAEhBL,OAAOI,SAASC,SAASnE,MACvB,2DCZNoE,IAASC,OAAO,kBAAC,EAAD,MAASxF,SAASyF,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArE,GACLsE,QAAQtE,MAAMA,EAAMuE,a,kBExI5BxH,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,sBAAsB,SAAW,wBAAwB,MAAQ,wB","file":"static/js/main.d5c17c6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__2Wd7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"document\":\"Document_document__3pYq9\",\"title\":\"Document_title__3bknA\",\"title_block\":\"Document_title_block__30EML\",\"form_field\":\"Document_form_field__BsML0\",\"about_field\":\"Document_about_field__1Fbaz\",\"profile_image\":\"Document_profile_image__2yNss\",\"document_footer\":\"Document_document_footer__1Cw2I\",\"snp_logo\":\"Document_snp_logo__1uXOW\",\"sign\":\"Document_sign__3bAuA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1DMGR\",\"title\":\"Form_title__2fap7\",\"description\":\"Form_description__3xZ_K\",\"input_label\":\"Form_input_label__2Icke\",\"select_label\":\"Form_select_label__3By9O\",\"form_fields\":\"Form_form_fields__1JUyu\",\"required\":\"Form_required__1mA7B\",\"form_field\":\"Form_form_field__3_TID\"};","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Document = () => {\r\n  const formFields = useSelector((state) => state.form);\r\n\r\n  const documentNames = React.useMemo(\r\n    () =>\r\n      formFields.reduce((acc, value) => {\r\n        acc[value.name] = value.value;\r\n        return acc;\r\n      }, {}),\r\n    [formFields]\r\n  );\r\n\r\n  const {\r\n    name,\r\n    birthDate,\r\n    education,\r\n    workPlace,\r\n    experience,\r\n    email,\r\n    aboutYou,\r\n  } = documentNames;\r\n  return (\r\n    <div className={styles.document}>\r\n      <div className={styles.title_block}>\r\n        <h1 className={styles.title}>Анкета стажёра в Salt & Pepper</h1>\r\n      </div>\r\n      <div className={styles.profile_image}></div>\r\n      <div className={styles.form_field}>ФИО: {name}</div>\r\n      <div className={styles.form_field}>Дата рождения: {birthDate} </div>\r\n      <div className={styles.form_field}>Образование: {education} </div>\r\n      <div className={styles.form_field}>Моё место работы: {workPlace} </div>\r\n      <div className={styles.form_field}>Опыт в разработке: {experience}</div>\r\n      <div className={styles.form_field}>Моя почта: {email}</div>\r\n      <div className={styles.about_field}>Обо мне: {aboutYou}</div>\r\n      <div className={styles.document_footer}>\r\n        <p className={styles.sign}>Подпись: </p>\r\n        <div className={styles.snp_logo} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Document);\r\n","export const INPUT_TYPES = {\r\n  TEXT: \"text\",\r\n  CHECKBOX: \"checkbox\",\r\n  TEXTAREA: \"textarea\",\r\n  STRING_DATE: \"string-date\",\r\n  NUMBER: \"number\",\r\n  SELECT: \"select\",\r\n};\r\n\r\nexport const VALIDATION_ERRORS = {\r\n  DATE_ERROR: \"Дата введена неверно. Введите дату в формате ДД/ММ/ГГГГ\",\r\n  EMAIL_ERROR: \"Почта введена неверно. Введите почту в правильном формате.\",\r\n  ABOUTYOU_ERROR: \"Вы превысили максимальное количество символов(500).\",\r\n  WORKPLACE_ERROR: \"Вы превысили максимальное количество символов(50).\",\r\n  EXPERIENCE_ERROR: \"Вы превысили максимальное количество символов(70).\",\r\n  NAME_ERROR: \"Вы превысили максимальную длину имени(40).\",\r\n  EDUCATION_ERROR: \"Вы превысили максимальное количество символов(50).\",\r\n};\r\n\r\nexport const dateRegex = /(^(((0[1-9]|1[0-9]|2[0-8])[\\/](0[1-9]|1[012]))|((29|30|31)[\\/](0[13578]|1[02]))|((29|30)[\\/](0[4,6,9]|11)))[\\/](19|[2-9][0-9])\\d\\d$)|(^29[\\/]02[\\/](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)$)/g;\r\n\r\nexport const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/g;\r\n","export const INPUT_INFO = {\r\n  name: { name: \"ФИО\", placeholder: \"Введите ваше ФИО\" },\r\n  birthDate: {\r\n    name: \"Дата рождения\",\r\n    placeholder: \"Введите вашу дату рождения в формате DD/MM/YYYY\",\r\n  },\r\n  education: { name: \"Образование\", placeholder: \"Введите ваше образование\" },\r\n  workPlace: { name: \"Место работы\", placeholder: \"Введите ваше место работы\" },\r\n  experience: {\r\n    name: \"Опыт в разработке\",\r\n    placeholder: \"Укажите ваш опыт в разработке\",\r\n  },\r\n  aboutYou: { name: \"О себе\", placeholder: \"Расскажите о себе\" },\r\n  email: {\r\n    name: \"Почта\",\r\n    placeholder: \"Введите вашу почту\",\r\n  },\r\n};\r\n\r\nexport const SELECT_OPTIONS = [\r\n  \"Нет\",\r\n  \"До 1 года\",\r\n  \"От 1 до 2 лет\",\r\n  \"От 2 до 3 лет\",\r\n  \"Больше 3 лет\",\r\n];\r\n","import { dateRegex, emailRegex, VALIDATION_ERRORS } from \"./constants\";\r\n\r\nexport const validators = {\r\n  email: {\r\n    validate: (value) => {\r\n      return !value.length || value.match(emailRegex);\r\n    },\r\n    getError: () => {\r\n      return VALIDATION_ERRORS.EMAIL_ERROR;\r\n    },\r\n  },\r\n  birthDate: {\r\n    validate: (value) => {\r\n      return !value.length || value.match(dateRegex);\r\n    },\r\n    getError: () => {\r\n      return VALIDATION_ERRORS.DATE_ERROR;\r\n    },\r\n  },\r\n  aboutYou: {\r\n    validate: (value) => {\r\n      return !value.length || (value.length > 0 && value.length < 500);\r\n    },\r\n    getError: () => {\r\n      return VALIDATION_ERRORS.ABOUTYOU_ERROR;\r\n    },\r\n  },\r\n  workPlace: {\r\n    validate: (value) => {\r\n      return !value.length || value.length < 50;\r\n    },\r\n    getError: () => {\r\n      return VALIDATION_ERRORS.WORKPLACE_ERROR;\r\n    },\r\n  },\r\n  experience: {\r\n    validate: (value) => {\r\n      return !value.length || value.length < 70;\r\n    },\r\n    getError: () => {\r\n      return VALIDATION_ERRORS.EXPERIENCE_ERROR;\r\n    },\r\n  },\r\n  name: {\r\n    validate: (value) => {\r\n      return !value.length || value.length < 40;\r\n    },\r\n    getError: () => {\r\n      return VALIDATION_ERRORS.NAME_ERROR;\r\n    },\r\n  },\r\n  education: {\r\n    validate: (value) => {\r\n      return !value.length || value.length < 50;\r\n    },\r\n    getError: () => {\r\n      return VALIDATION_ERRORS.EDUCATION_ERROR;\r\n    },\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport { INPUT_TYPES } from \"utils/constants\";\r\nimport { SELECT_OPTIONS } from \"utils/mock\";\r\nimport { validators } from \"utils/validators\";\r\n\r\nconst Input = (props) => {\r\n  if (props.type === INPUT_TYPES.TEXT) {\r\n    return (\r\n      <>\r\n        <input {...props} className={styles.input} required />\r\n        {validators[props.field].validate(props.value) ? (\r\n          \"\"\r\n        ) : (\r\n          <div className={styles.error}>\r\n            {validators[props.field].getError()}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  } else if (props.type === INPUT_TYPES.SELECT) {\r\n    const renderedOptions = SELECT_OPTIONS.map((e, index) => (\r\n      <option key={index}>{e}</option>\r\n    ));\r\n    return (\r\n      <>\r\n        <select {...props} className={styles.select} required>\r\n          {renderedOptions}\r\n        </select>\r\n      </>\r\n    );\r\n  } else if (props.type === INPUT_TYPES.TEXTAREA) {\r\n    return (\r\n      <>\r\n        <textarea {...props} className={styles.textarea} required></textarea>\r\n        {validators[props.field].validate(props.value) ? (\r\n          \"\"\r\n        ) : (\r\n          <div className={styles.error}>\r\n            {validators[props.field].getError()}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Input;\r\n","export default {\r\n  CHANGE_FORM_FIELD: \"CHANGE_FORM_FIELD\",\r\n  SET_FORM_FIELDS: \"SET_FORM_FIELDS\",\r\n};\r\n","import ActionTypes from \"store/actions\";\r\n\r\nconst { CHANGE_FORM_FIELD, SET_FORM_FIELDS } = ActionTypes;\r\n\r\nexport const changeFormField = (payload) => {\r\n  return { type: CHANGE_FORM_FIELD, payload };\r\n};\r\n\r\nexport const setFormFields = (payload) => {\r\n  return { type: SET_FORM_FIELDS, payload };\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport Input from \"components/Input\";\r\nimport { INPUT_INFO } from \"utils/mock\";\r\nimport { INPUT_TYPES } from \"utils/constants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeFormField, setFormFields } from \"store/actions/form\";\r\n\r\nconst Form = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const fields = useSelector((state) => state.form);\r\n\r\n  const getLocalStorageState = React.useCallback(() => {\r\n    const localStorageState = JSON.parse(localStorage.getItem(\"formFields\"));\r\n    dispatch(setFormFields({ newState: localStorageState }));\r\n    return localStorageState;\r\n  }, [dispatch]);\r\n\r\n  const [inputState, changeInputState] = React.useState(\r\n    getLocalStorageState() || {\r\n      name: \"\",\r\n      birthDate: \"\",\r\n      education: \"\",\r\n      workPlace: \"\",\r\n      experience: \"\",\r\n      email: \"\",\r\n      aboutYou: \"\",\r\n    }\r\n  );\r\n\r\n  const handleInputChange = React.useCallback(\r\n    (e) => {\r\n      const stateCopy = inputState;\r\n      stateCopy[e.target.dataset.field] = e.target.value;\r\n      changeInputState(stateCopy);\r\n      dispatch(\r\n        changeFormField({\r\n          value: stateCopy[e.target.dataset.field],\r\n          field: e.target.dataset.field,\r\n        })\r\n      );\r\n      localStorage.setItem(\"formFields\", JSON.stringify(stateCopy));\r\n    },\r\n    [dispatch, inputState]\r\n  );\r\n\r\n  const renderedInputs = React.useMemo(\r\n    () =>\r\n      fields.map((e, index) => (\r\n        <div className={styles.form_field} key={index}>\r\n          <Input\r\n            type={e.type}\r\n            className={styles.input}\r\n            onChange={handleInputChange}\r\n            value={e.value}\r\n            field={e.name}\r\n            data-field={e.name}\r\n            id={index}\r\n            key={index}\r\n          />\r\n          <label\r\n            className={\r\n              e.type === INPUT_TYPES.SELECT\r\n                ? styles.select_label\r\n                : styles.input_label\r\n            }\r\n            htmlFor={index}\r\n          >\r\n            {INPUT_INFO[e.name].name}*\r\n          </label>\r\n        </div>\r\n      )),\r\n    [fields]\r\n  );\r\n\r\n  return (\r\n    <form className={styles.form} noValidate>\r\n      <div className={styles.title}>Форма для стажировки</div>\r\n      <p className={styles.description}>\r\n        Пожалуйста, заполни как можно подробнее данную заявку. Если у тебя есть\r\n        готовое резюме, укажи на него ссылку.\r\n      </p>\r\n      <div className={styles.form_fields}>{renderedInputs}</div>\r\n      <div className={styles.required}>* - эти поля обязательные</div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport Document from \"components/Document\";\r\nimport Form from \"components/Form\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div className={styles.main}>\r\n      <Form />\r\n      <Document />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Main);\r\n","import ActionTypes from \"store/actions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { INPUT_TYPES } from \"utils/constants\";\r\n\r\nconst { CHANGE_FORM_FIELD, SET_FORM_FIELDS } = ActionTypes;\r\n\r\nconst initialState = [\r\n  {\r\n    value: \"\",\r\n    type: INPUT_TYPES.TEXT,\r\n    name: \"name\",\r\n  },\r\n  { value: \"\", name: \"birthDate\", type: INPUT_TYPES.TEXT },\r\n  { value: \"\", name: \"education\", type: INPUT_TYPES.TEXT },\r\n  { value: \"\", name: \"workPlace\", type: INPUT_TYPES.TEXT },\r\n  { value: \"\", name: \"experience\", type: INPUT_TYPES.SELECT },\r\n  { value: \"\", name: \"email\", type: INPUT_TYPES.TEXT },\r\n  { value: \"\", name: \"aboutYou\", type: INPUT_TYPES.TEXTAREA },\r\n];\r\n\r\nexport const formReducer = createReducer(initialState, {\r\n  [CHANGE_FORM_FIELD]: (state, action) => {\r\n    const { payload } = action;\r\n    const idx = state.findIndex((e) => e.name === payload.field);\r\n    state[idx].value = payload.value;\r\n  },\r\n\r\n  [SET_FORM_FIELDS]: (state, action) => {\r\n    const { payload } = action;\r\n    if (!payload.newState) return;\r\n    const stateCopy = [...state];\r\n    state = stateCopy.map((e) => {\r\n      e.value = payload.newState[e.name];\r\n    });\r\n  },\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { formReducer } from \"../reducers/form\";\r\n\r\nexport default combineReducers({\r\n  form: formReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport reducers from \"store/reducers\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport \"./index.css\";\nimport Main from \"components/Main\";\nimport { Provider } from \"react-redux\";\nimport store from \"store/store\";\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"components/Application\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2BtUD\",\"select\":\"Input_select__3jwVB\",\"textarea\":\"Input_textarea__1mO0l\",\"error\":\"Input_error___NYKI\"};"],"sourceRoot":""}